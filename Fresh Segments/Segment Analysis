Using our filtered dataset by removing the interests with less than 6 months worth of data, which are the top 10 and bottom 10 interests which have the largest composition values in any month_year? Only use the maximum composition value for each interest but you must keep the corresponding month_year

-- SCHEMA SQL

-- Create a filtered table called sub_metrics

DROP TABLE IF EXISTS fresh_segments.sub_metrics;

CREATE TABLE fresh_segments.sub_metrics AS
SELECT *
FROM fresh_segments.interest_metrics;

-- FILTERED DATASET EXPRESSION 

WITH discard_cte AS (
SELECT mt.interest_id, COUNT(DISTINCT mt.month_year) AS total_months
FROM fresh_segments.interest_metrics mt
WHERE mt._month IS NOT NULL
GROUP BY 1
HAVING COUNT(DISTINCT mt.month_year) < 6
)

-- TOP 10

SELECT sm.interest_id, mp.interest_name, sm.month_year, sm.composition 
FROM fresh_segments.sub_metrics sm
JOIN fresh_segments.interest_map mp
ON sm.interest_id::INT = mp.id
WHERE sm.interest_id NOT IN (SELECT interest_id FROM discard_cte)
AND sm.month_year IS NOT NULL
ORDER BY 4 DESC
LIMIT 10;

/*
interest_id	interest_name	month_year	composition
21057	Work Comes First Travelers	2018-12-01	21.2
21057	Work Comes First Travelers	2018-10-01	20.28
21057	Work Comes First Travelers	2018-11-01	19.45
21057	Work Comes First Travelers	2019-01-01	18.99
6284	Gym Equipment Owners	2018-07-01	18.82
21057	Work Comes First Travelers	2019-02-01	18.39
21057	Work Comes First Travelers	2018-09-01	18.18
39	Furniture Shoppers	2018-07-01	17.44
77	Luxury Retail Shoppers	2018-07-01	17.19
12133	Luxury Boutique Hotel Researchers	2018-10-01	15.15
*/

-- BOTTOM 10

/*
interest_id	interest_name	month_year	composition
45524	Mowing Equipment Shoppers	2019-05-01	1.51
44449	United Nations Donors	2019-04-01	1.52
34083	New York Giants Fans	2019-06-01	1.52
35742	Disney Fans	2019-06-01	1.52
20768	Beer Aficionados	2019-05-01	1.52
39336	Philadelphia 76ers Fans	2019-05-01	1.52
4918	Gastrointestinal Researchers	2019-05-01	1.52
6314	Online Directory Searchers	2019-06-01	1.53
6127	LED Lighting Shoppers	2019-05-01	1.53
36877	Crochet Enthusiasts	2019-05-01	1.53

*/

Which 5 interests had the lowest average ranking value?

SELECT sm.interest_id, mp.interest_name, ROUND( AVG(sm.ranking), 2) AS avg_rank
FROM fresh_segments.sub_metrics sm
JOIN fresh_segments.interest_map mp
ON sm.interest_id::INT = mp.id
WHERE sm.interest_id NOT IN (SELECT interest_id FROM discard_cte)
AND sm.month_year IS NOT NULL
GROUP BY 1, 2 
ORDER BY 3 ASC
LIMIT 5;

/*
interest_id	interest_name	avg_rank
41548	Winter Apparel Shoppers	1.00
42203	Fitness Activity Tracker Users	4.11
115	Mens Shoe Shoppers	5.93
171	Shoe Shoppers	9.36
4	Luxury Retail Researchers	11.86
*/

Which 5 interests had the largest standard deviation in their percentile_ranking value?

SELECT sm.interest_id, mp.interest_name, STDDEV(percentile_ranking) AS std_dev_ranking
FROM fresh_segments.sub_metrics sm
JOIN fresh_segments.interest_map mp
ON sm.interest_id::INT = mp.id
WHERE sm.interest_id NOT IN (SELECT interest_id FROM discard_cte)
AND sm.month_year IS NOT NULL
GROUP BY 1, 2 
ORDER BY 3 DESC
LIMIT 5;

/*
interest_id	interest_name	std_dev_ranking
23	Techies	30.175047086403474
20764	Entertainment Industry Decision Makers	28.97491995962486
38992	Oregon Trip Planners	28.318455623301364
43546	Personalized Gift Shoppers	26.242685919808483
10839	Tampa and St Petersburg Trip Planners	25.612267373272523
*/

For the 5 interests found in the previous question - what was minimum and maximum percentile_ranking values for each interest and its corresponding year_month value? Can you describe what is happening for these 5 interests?

WITH top_5_cte AS (
SELECT sm.interest_id, mp.interest_name, STDDEV(percentile_ranking) AS std_dev_ranking
FROM fresh_segments.sub_metrics sm
JOIN fresh_segments.interest_map mp
ON sm.interest_id::INT = mp.id
WHERE sm.interest_id NOT IN (SELECT interest_id FROM discard_cte)
AND sm.month_year IS NOT NULL
GROUP BY 1, 2 
ORDER BY 3 DESC
LIMIT 5
),
min_max_cte AS (
SELECT sm.interest_id, mp.interest_name, sm.month_year, sm.percentile_ranking, MIN(sm.percentile_ranking) OVER (PARTITION BY mp.interest_name) AS min_percentile_val, MAX(sm.percentile_ranking) OVER (PARTITION BY mp.interest_name) AS max_percentile_val
FROM fresh_segments.sub_metrics sm
JOIN fresh_segments.interest_map mp
ON sm.interest_id::INT = mp.id
WHERE sm.interest_id NOT IN (SELECT interest_id FROM top_5_cte)
AND sm.month_year IS NOT NULL
)  
SELECT month_year, interest_id, interest_name, percentile_ranking
FROM min_max_cte
WHERE percentile_ranking = max_percentile_val
OR percentile_ranking = min_percentile_val
ORDER BY 3, 4 DESC;

/*
month_year interest_name	percentile_ranking

*/

How would you describe our customers in this segment based off their composition and ranking values? What sort of products or services should we show to these customers and what should we avoid?
