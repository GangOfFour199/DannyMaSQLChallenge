What is the unique count and total amount for each transaction type?

SELECT txn_type, COUNT(*) AS number_transactions, 
SUM(txn_amount) AS total_transaction_amount
FROM data_bank.customer_transactions
GROUP BY 1;

-- purchase -> 1617 -> $806537
-- deposit -> 2671 -> $1359168
-- withdrawal -> 1580 -> $793003

What is the average total historical deposit counts and amounts for all customers?

AS a common table expression:

WITH customerDeposits AS (
SELECT customer_id, txn_type, COUNT(*) AS number_transactions, 
SUM(txn_amount) AS total_transaction_amount
FROM data_bank.customer_transactions
WHERE txn_type = 'deposit'
GROUP BY 1, 2
)

SELECT AVG(number_transactions), AVG(total_transaction_amount)
FROM customerDeposits;

-- AS a subquery:

SELECT AVG(sub.number_transactions) AS avg_deposit_counts, AVG(sub.total_transaction_amount) AS avg_deposit_amounts
FROM (
SELECT customer_id, txn_type, COUNT(*) AS number_transactions, 
SUM(txn_amount) AS total_transaction_amount
FROM data_bank.customer_transactions
WHERE txn_type = 'deposit'
GROUP BY 1, 2
) sub;

-- avg deposit counts 5
-- avg depsoit amount 2718.34

For each month - how many Data Bank customers make more than 1 deposit and either 1 purchase or 1 withdrawal in a single month?

WITH monthlyCustomerActions AS (
  SELECT 
    customer_id,
    EXTRACT('month' FROM txn_date) AS months,
    SUM(CASE WHEN txn_type = 'deposit' THEN 1 ELSE 0 END) AS deposit_count,
    SUM(CASE WHEN txn_type = 'purchase' THEN 1 ELSE 0 END) AS purchase_count,
    SUM(CASE WHEN txn_type = 'withdrawal' THEN 1 ELSE 0 END) AS withdrawal_count
  FROM data_bank.customer_transactions
  GROUP BY 1, 2
)

SELECT 
  months,
  COUNT(DISTINCT customer_id) AS customer_count
FROM monthlyCustomerActions
WHERE deposit_count > 1
  AND (purchase_count = 1 OR withdrawal_count = 1)
GROUP BY 1;

/* 
month 1 = 115 customers
month 2 = 108
month 3 - 113
month 4 = 50
*/

What is the closing balance for each customer at the end of the month?

WITH customerTransactions AS (
SELECT date_trunc('month', txn_date) AS txn_month, txn_date, customer_id,
SUM((CASE WHEN txn_type = 'deposit' THEN txn_amount ELSE 0 END) - (CASE WHEN txn_type <> 'deposit' THEN txn_amount ELSE 0 END)) AS balance
FROM data_bank.customer_transactions
GROUP BY 1, 2, 3
), customerBalances AS(
SELECT *, 
SUM(balance) OVER(PARTITION BY customer_id ORDER BY txn_date) AS running_sum,
ROW_NUMBER() OVER(PARTITION BY customer_id, txn_month ORDER BY txn_date DESC) AS row
FROM customerTransactions
ORDER BY customer_id
)

SELECT customer_id, (SELECT date_trunc('month', txn_date::date) + interval '1 month' - interval '1 day')::date
AS end_of_month, running_sum AS closing_balance
FROM customerBalances
WHERE row = 1
;

What is the percentage of customers who increase their closing balance by more than 5%?

WITH customerTransactions AS (
SELECT date_trunc('month', txn_date) AS txn_month, txn_date, customer_id,
SUM((CASE WHEN txn_type = 'deposit' THEN txn_amount ELSE 0 END) - (CASE WHEN txn_type <> 'deposit' THEN txn_amount ELSE 0 END)) AS balance
FROM data_bank.customer_transactions
GROUP BY 1, 2, 3
), customerBalances AS(
SELECT *, 
SUM(balance) OVER(PARTITION BY customer_id ORDER BY txn_date) AS running_sum,
ROW_NUMBER() OVER(PARTITION BY customer_id, txn_month ORDER BY txn_date DESC) AS row
FROM customerTransactions
ORDER BY customer_id
), closingBalances AS (
SELECT customer_id, (SELECT date_trunc('month', txn_date::date) + interval '1 month' - interval '1 day')::date AS end_of_month,
(SELECT date_trunc('month', txn_date::date) - interval '1 day')::date AS previous_end_of_month,
running_sum AS closing_balance
FROM customerBalances
WHERE row = 1
), pctIncrease AS (
SELECT cb1.customer_id, cb1.end_of_month, cb1.closing_balance, cb2.closing_balance AS following_month_balance,
CASE WHEN (cb2.closing_balance > cb1.closing_balance AND (cb2.closing_balance / cb1.closing_balance) -1 > 0.05) THEN 1 ELSE 0 END As pct_increase
FROM closingBalances cb1
INNER JOIN closingBalances cb2 
ON cb1.end_of_month = cb2.previous_end_of_month
AND cb1.customer_id = cb2.customer_id
WHERE cb1.closing_balance != 0
)

SELECT SUM(pct_increase) As sum, COUNT(pct_increase) AS count,
CEIL(100* SUM(pct_increase) / COUNT(pct_increase)) AS customers_increasing_balance_pct
FROM pctIncrease;

20.9% of customers increased their closing balance by 5% or more compared to the previous month.
